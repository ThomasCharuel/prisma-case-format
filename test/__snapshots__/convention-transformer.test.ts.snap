// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it can enforce a specified case convention on views 1`] = `
"generator client {
  provider        = \\"prisma-client-js\\"
  output          = \\"../node_modules/@generated/read\\"
  previewFeatures = [\\"views\\"]
}

generator typegraphql {
  provider = \\"typegraphql-prisma\\"
}

datasource db {
  provider = \\"postgres\\"
  url      = env(\\"DB_URL\\")
}

model GooseDbVersion {
  id          Int                    @id @default(autoincrement())
  versionId   BigInt                 @map(\\"version_id\\")
  isApplied   Boolean                @map(\\"is_applied\\")
  tstamp      DateTime?              @default(now()) @db.Timestamp(6)
  circleValue Unsupported(\\"circle\\")? @map(\\"circle_value\\")

  @@map(\\"goose_db_version\\")
}

view Accounts {
  id        String    @unique @db.Uuid
  createdAt DateTime? @map(\\"created_at\\") @db.Timestamp(6)
  name      String?
  updatedAt DateTime? @map(\\"updated_at\\") @db.Timestamp(6)
  ownedBy   String?   @map(\\"owned_by\\") @db.Uuid
  users     User[]

  @@map(\\"accounts\\")
}

model User {
  id         String    @id
  name       String
  accounts   Accounts? @relation(fields: [accountsId], references: [id])
  accountsId String?   @map(\\"accounts_id\\") @db.Uuid

  @@map(\\"user\\")
}
"
`;

exports[`it can map ...horrendous indexes that make your head hurt for these people 1`] = `
"datasource db {
  provider = \\"mysql\\"
  url      = \\"file:database.db\\"
}

// generator
generator client {
  provider = \\"prisma-client-js\\"
}

model Post {
  @@map(\\"post\\")
  id      Int     @id @default(autoincrement())
  titlePain   String @map(\\"title_pain\\")
  contentHash String? @map(\\"content_hash\\")

  @@index(fields: [titlePain, contentHash(length: 12)], name: \\"main_index\\")
}

model Address {
  @@map(\\"address\\")
  id     Int    @id
  street String
  number Int
  user   User[]
}

model User {
  @@map(\\"user\\")
  id        Int     @id
  email     String
  address   Address @relation(fields: [addressId], references: [id])
  addressId Int @map(\\"address_id\\")

  @@index([addressId], map: \\"an_index_name\\")
}
"
`;

exports[`it can map enum column to enum definition 1`] = `
"datasource db {
  provider = \\"mysql\\"
  url      = env(\\"DATABASE_URL\\")
}

generator client {
  provider = \\"prisma-client-js\\"
}

model Posts {
  id        Int      @id @default(autoincrement())
  content   String?  @db.VarChar(245)
  post_type PostType @map(\\"postType\\")

  @@map(\\"posts\\")
}

enum PostType {
  Note
  Question
}

enum SnaggleFlark {
  foo
  buz
  bazz
}

enum AppleColors {
  green
  red
}
"
`;

exports[`it can rename enum in the database 1`] = `
"enum UserLocale {
  fr_FR
  en_EN

  @@map(\\"user_locale\\")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  firstName String     @default(\\"\\") @map(\\"first_name\\")
  lastName  String     @default(\\"\\") @map(\\"last_name\\")
  locale    UserLocale @default(fr_FR)

  @@map(\\"user\\")
}
"
`;
